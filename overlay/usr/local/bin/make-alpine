#!/bin/bash

readonly TOOLS_DIR=/usr/local/lib/make_alpine/tools
readonly CONFIG_DIR=/usr/local/lib/make_alpine/config

# constants
readonly BOOT_DIR_SUFFIX="1.vfat.d"
readonly ROOTFS_DIR_SUFFIX="2.ext4.d"
readonly BOOTPART_SIZE_MIB=50

# cmdline options
OPT_POSITIONAL=()
OPT_NAME="alpinelinux-$(uname -m)"
OPT_WORKDIR="."
OPT_NO_IMAGE=""
OPT_ROOTFS_EXTRA_MIB=50

__parse_cmdline_args()
{
  while [[ ${#} -gt 0 ]]; do
    key="${1}"
    case $key in
      -h|--help)
        __help_and_exit
      ;;
      -n|--name)
        OPT_NAME="${2}-$(uname -m)"
        shift
        shift
      ;;
      -d|--workdir)
        OPT_WORKDIR="${2%/}" # remove trailing slash
        shift
        shift
      ;;
      --no-image)
        OPT_NO_IMAGE="true"
        shift
      ;;
      --rootfs-extra-mib)
        OPT_ROOTFS_EXTRA_MIB="${2}"
        shift
        shift
      ;;
      *)
        OPT_POSITIONAL+=("${1}")
        shift
      ;;
    esac
  done
}

__help_and_exit()
{
  >&2 echo -e "\n\tUsage: ${0} [-n|--name <prefix-name>] [-d|--workdir <workdir>] [--no-image] [--rootfs-extra-mib <size>] [<config-scripts> [<config-script>, ...]]\n"
  exit 1
}

__rootfs_init_once()
{
  local rootfs_dir=${1}
  if [[ ! -e  ${rootfs_dir} ]]; then
    ${TOOLS_DIR}/rootfs_init ${rootfs_dir}
  fi
}

__rootfs_configure_pre()
{
  local boot_dir=${1}
  local rootfs_dir=${2}
  if [[ ! -e ${boot_dir} ]]; then
    mkdir ${boot_dir}
  fi
  mv ${boot_dir} ${rootfs_dir}/boot
}

__rootfs_configure_post()
{
  local boot_dir=${1}
  local rootfs_dir=${2}
  mv ${rootfs_dir}/boot ${boot_dir}
}

__rootfs_pack()
{
  local prefix_name=${1}
  local workdir=${2}
  local rootfs_size_mib=$(__get_partiton_size ${workdir}/${prefix_name}.${ROOTFS_DIR_SUFFIX})
  ${TOOLS_DIR}/rootfs_pack_img ${prefix_name} ${workdir} \
    ${BOOTPART_SIZE_MIB} \
    ${rootfs_size_mib}
}

__get_partiton_size()
{
  local part=${1}
  local size=$(du -hs ${part} |cut -f 1)
  local size_int=${size%.*M}
  echo "$((${size_int}+${OPT_ROOTFS_EXTRA_MIB}))"
}

__run()
{
  local readonly boot_dir="${OPT_WORKDIR}/${OPT_NAME}.${BOOT_DIR_SUFFIX}"
  local readonly rootfs_dir="${OPT_WORKDIR}/${OPT_NAME}.${ROOTFS_DIR_SUFFIX}"
  __rootfs_init_once "${rootfs_dir}"
  __rootfs_configure_pre \
      "${boot_dir}" \
      "${rootfs_dir}"
  if [[ ${#OPT_POSITIONAL[@]} -gt 0 ]]; then
    ${TOOLS_DIR}/rootfs_configure \
      --directory "${rootfs_dir}" \
      --mount "${CONFIG_DIR}" \
      "${OPT_POSITIONAL[@]}"
  fi
    __rootfs_configure_post \
      "${boot_dir}" \
      "${rootfs_dir}"
  if [[ -z "${OPT_NO_IMAGE}" ]]; then
    __rootfs_pack \
      "${OPT_NAME}" \
      "${OPT_WORKDIR}"
  fi
}

main()
{
  __parse_cmdline_args "${@}"
  __run "${@}"
}

main "${@}"
